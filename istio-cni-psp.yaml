
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: istio-cni-system
  annotations:
    container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
    apparmor.security.beta.kubernetes.io/allowedProfileNames: runtime/default
    apparmor.security.beta.kubernetes.io/defaultProfileName: runtime/default
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default,docker/default
    seccomp.security.alpha.kubernetes.io/defaultProfileName: docker/default
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  forbiddenSysctls:
  - '*'
  hostNetwork: true
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - configMap
  - emptyDir
  - projected
  - secret
  - downwardAPI
  - persistentVolumeClaim
  - hostPath
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRole"
metadata:
  name: "istio-cni-system-psp"
  labels:
    branch: "master"
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs:     ['use']
  resourceNames:
  - istio-cni-system
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "istio-cni-system-psp-binding"
  labels:
    branch: "master"
roleRef:
  kind: ClusterRole
  name: istio-cni-system-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: istio-cni
  namespace: kube-system
